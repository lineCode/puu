sudo: required

services:
- docker

language: cpp
dist: xenial
os: linux

addons:
  apt:
    sources:
      - sourceline: 'deb http://dl.bintray.com/igagis/ubuntu xenial main'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x379CE192D401AB61'
    update: true
    packages:
    - binfmt-support
    - qemu-user-static
    - myci

matrix:
  include:
    - name: macosx
      os: osx
      compiler: clang
      osx_image: xcode11
    - name: ios
      os: osx
      compiler: clang
      osx_image: xcode11
    - name: android
      language: android
      android:
        components:
          - platform-tools
          - tools
          - build-tools-28.0.3
          - android-28
#          - sys-img-armeabi-v7a-android-22
          - extra-android-m2repository
    - name: msys2
      os: windows

env:
  global:
  # Encrypted MYCI_BINTRAY_API_KEY for publishing to bintray.
  - secure: "CWzHXezg7cT7C5k0EO+m1Ndhf/eQ+zLIF6HSMBkzbPsV3jdJ9/xD3tauXXp+K7c+44iDYC2LjuFlc6GQlAjF3wrtE2wWWDcKqd6e9d0DqeMjVk944H/diP6S+jyK4bS49GP6tEKNnrkGM6sFHKLp+NGmIM4TF8qG2FcR9cvSpBxlDItByKxUmsIQn73XCGJwIYZOqklXhBjZRo0dg04M+5VM8qiCRhFHYzr3XwiX2axkkJQLMQufUc8u3V2RHc16FITsfdQghfu/aUy89t1LryY/XNJT/1o1mdO+IH48wqXp/HMcQ7cAS4mMgztHnlypvUe+gpOzxa52WcHRice/95UUKC2u6yFcauX1Ar0yeGPqsIwgzhF2Eq9plbSAWFBsiGjq7PA26Sv/g2yqtQ45DcsDF2zA9IHlEViO1g1GVRjUWVp+95uIDnvoLXjQWNHaKeNZsMfDYymRjcE/iWXpugwTnjEgJZ6+75eWSGVt8KOfmH/fXrJsENRdtV5OhxjEDTPtBfgk3cRBsG9ryh1p3HH4hErDLd8r9w8AjIP9034D4S6JIWKhRKl/QyQOlsRLEKp1tSvYHov7tMy5/+NfxJ9x8TS1VH/vAFi527/ZKxep5LJqmdHNHZES8lB3OBLpGxDOlnh9YbNHpgwfevmz/KnS2UrX+kZSY/CVoVyV6AI="
  # Encrypted PRORAB_GIT_ACCESS_TOKEN for publishing to homebrew-tap.
  - secure: "hTb0tpvTrx216BXy9K/4x4rN3LqQXWilDVTFZBwatTWLLscWr/PZSk222niHYYiDDlBV6OaSWDp63QJiY1rtLhof6dSR6Omvdbb35toxm/ZpA4s+wTOAzgXbaYKFamu6Qwt/e+gceDNbXtyexLJb6GBPWA98dN7q/sCp7yT6KtUQdQ9/xu1vOucfQqu81cACWrXwWVPLt6uAOoJXs3MngTQHX08bIOhepfZ/MuwWra9yAAneR8ekt+Gb854x9M5CSq6k90h36kidNoOAyWDOxg7rEGRKKlD5m/TPCowDZafFXzs2KE2DWD4QUDrx+DcV29Ni6UkwBf6fuj+HaGrSuH40SvNvTEXt0sj87zrL0PTKHWLDcY5xZRLp89OrM+ikKUcQlQPn9NLM2C7OqxORo0ucQpLgMNKmCj5pe+nkSLAE1+zo6icwOP3i4nvQDDw1Cl7i9qBXdB+lIthvPBWnjmW4DVielNx9AEriDlKv7dCB+hafpxhLPf04vmtgyo6URbtI2Ov77Emc/cveFOaOpJOFZKsXvqWlWTkTLMlfQ/e6OsAZ7si9QBxLUuxxdbXyL8CczIOys/V7eBnjJolqHCoois2KDqpNp26t1Z5U/YG4TEzQBHAK9hCMVhaiGzMNSiJxen80UT6HQW7BM9ZxAdGQ1F2DaF2/QY4T82qTZ1o="
  - MYCI_GIT_USERNAME=igagis
  - MYCI_GIT_ACCESS_TOKEN=$PRORAB_GIT_ACCESS_TOKEN
  - PACKAGE_VERSION=$(myci-deb-version.sh debian/changelog)
  - PACKAGE_NAME=puu
  matrix:
  - OS_REL=xenial OS=ubuntu DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=bionic OS=ubuntu DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=stretch OS=debian DOCKER_IMAGE=$OS:$OS_REL PACKAGE_TYPE=deb
  - OS_REL=stretch OS=raspbian DOCKER_IMAGE=igagis/$OS:$OS_REL PACKAGE_TYPE=deb

before_install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker run --name ccc -v $TRAVIS_BUILD_DIR/..:/build -w /build/$(basename $TRAVIS_BUILD_DIR) -it -d $DOCKER_IMAGE bash &&
    if [ "$PACKAGE_TYPE" == "deb" ]; then
      docker exec ccc apt update &&
      docker exec ccc apt install -y dirmngr &&
      docker exec ccc bash -c "echo 'deb http://dl.bintray.com/igagis/$OS $OS_REL main' > /etc/apt/sources.list.d/igagis.list" &&
      docker exec ccc apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 379CE192D401AB61 &&
      docker exec ccc apt update &&
      docker exec ccc apt install -y devscripts equivs myci &&
      myci-deb-prepare.sh;
    fi;
  fi
- if [ "$TRAVIS_JOB_NAME" == "macosx" ]; then
    brew update > /dev/null &&
    brew tap igagis/tap &&
    brew update > /dev/null &&
    brew install myci prorab prorab-extra libutki libpapki libunikod libclargs;
  fi
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    brew update > /dev/null &&
    brew tap igagis/tap &&
    brew update > /dev/null &&
    brew install myci &&

    sudo gem install cocoapods &&
    pod repo add --silent igagis https://$MYCI_GIT_USERNAME:$MYCI_GIT_ACCESS_TOKEN@github.com/igagis/cocoapods-repo.git &&
    pod install --project-directory=xcode;
  fi
- if [ "$TRAVIS_JOB_NAME" == "msys2" ]; then
    choco upgrade --no-progress -y msys2 &&
    export shell="/c/tools/msys64/msys2_shell.cmd -defterm -no-start -full-path -here -c" &&

    $shell "echo -e '[igagis_msys]\\nSigLevel = Optional TrustAll\\nServer = https://dl.bintray.com/igagis/msys2/msys' >> /etc/pacman.conf" &&
    $shell "echo -e '[igagis_mingw64]\\nSigLevel = Optional TrustAll\\nServer = https://dl.bintray.com/igagis/msys2/mingw64' >> /etc/pacman.conf" &&
    $shell "echo -e '[igagis_mingw32]\\nSigLevel = Optional TrustAll\\nServer = https://dl.bintray.com/igagis/msys2/mingw32' >> /etc/pacman.conf" &&
    $shell "pacman --noconfirm --ask 20 --sync --refresh --refresh --sysupgrade --sysupgrade" &&
    $shell "pacman --noconfirm --ask 20 --sync --refresh --refresh --sysupgrade --sysupgrade" &&
    $shell "pacman -Sy --noconfirm myci";
  fi
- export PACKAGE_VERSION=$(myci-deb-version.sh debian/changelog)


install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker exec ccc myci-deb-install-build-deps.sh;
  fi
# Accept android SDK licenses and install android tools
- if [ "$TRAVIS_JOB_NAME" == "android" ]; then
    echo y | sdkmanager "ndk-bundle" &&
    echo y | sdkmanager "cmake;3.6.4111459";
  fi

before_script:
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    curl -L https://github.com/zackslash/Xcode-Proj-Adder/raw/master/bin/XcodeProjAdder -O &&
    chmod +x XcodeProjAdder &&
    (cd xcode/$PACKAGE_NAME && ../../XcodeProjAdder -XCP $PACKAGE_NAME.xcodeproj -SCSV `echo $(find ../../src -type f -name *.cpp) | sed -E -e 's/ /,/g'`)
  fi
- if [ "$TRAVIS_JOB_NAME" == "msys2" ]; then
    $shell "cd $(pwd) && myci-apply-version.sh -v \$(myci-deb-version.sh debian/changelog) msys2/PKGBUILD.in";
  fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -z "$TRAVIS_JOB_NAME" ]; then
    docker exec ccc dpkg-buildpackage -us -uc;
  fi
- if [ "$TRAVIS_JOB_NAME" == "macosx" ]; then
    make &&
    make test;
  fi
- if [ "$TRAVIS_JOB_NAME" == "ios" ]; then
    xcodebuild -workspace xcode/$PACKAGE_NAME.xcworkspace -scheme $PACKAGE_NAME CONFIGURATION_BUILD_DIR=../build -configuration Release &&
    myci-create-zip-package.sh -h src -f xcode/build/lib$PACKAGE_NAME.a///lib/ios -f LICENSE $PACKAGE_NAME-$PACKAGE_VERSION.zip;
  fi
- if [ "$TRAVIS_JOB_NAME" == "android" ]; then
    (cd android && ./gradlew build) &&
    myci-apply-version.sh -v $PACKAGE_VERSION android/*.pom.in &&
    myci-apply-version.sh -v $PACKAGE_VERSION android/*.aar.in --filename-only;
  fi
- if [ "$TRAVIS_JOB_NAME" == "msys2" ]; then
    $shell "cd $(pwd)/msys2 && makepkg-mingw --syncdeps --noconfirm --skipinteg";
  fi


before_deploy:



deploy:
- provider: script
  skip_cleanup: true
  on:
    tags: true
    condition: $PACKAGE_TYPE = deb && -z "$TRAVIS_JOB_NAME"
  script: myci-deploy-debian-bintray.sh -u igagis -r $OS -p $PACKAGE_NAME -c main -d $OS_REL $TRAVIS_BUILD_DIR/../*.deb
- provider: script
  skip_cleanup: true
  script: myci-deploy-maven-bintray.sh -u igagis -r android -d io/github/igagis -p $PACKAGE_NAME -v $PACKAGE_VERSION android/$PACKAGE_NAME-$PACKAGE_VERSION.aar
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = android
- provider: script
  skip_cleanup: true
  script: myci-deploy-homebrew.sh -t igagis/tap
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = macosx
- provider: script
  skip_cleanup: true
  script: myci-deploy-cocoapods.sh -r igagis -v $PACKAGE_VERSION -u igagis -b cocoapods -p $PACKAGE_NAME-$PACKAGE_VERSION.zip cocoapods/$PACKAGE_NAME.podspec.in
  on:
    tags: true
    condition: $TRAVIS_JOB_NAME = ios
